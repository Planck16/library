{
	"template": {
		"prefix": "cpp",
		"body": [
			"#include <algorithm>",
			"#include <cctype>",
			"#include <cmath>",
			"#include <cstdio>",
			"#include <deque>",
			"#include <iostream>",
			"#include <map>",
			"#include <numeric>",
			"#include <set>",
			"#include <string>",
			"#include <tuple>",
			"#include <utility>",
			"#include <vector>",
			"#define rep(i, n) for (long long i = 0; i < (long long)(n); ++i)",
			"#define rng(a) (a).begin(),(a).end()",
			"#define rrng(a) (a).rbegin(),(a).rend()",
			"using namespace std;",
			"using ll = long long;",
			"using P = pair<ll, ll>;",
			"void print() { cout << '\\n'; }",
			"template<class T> void print(const T& value) { cout << value << '\\n'; }",
			"template<class T, class... A> void print(const T& first, const A&... tail) { cout << first << \" \"; print(tail...); }",
			"template<class... A> void print(const A&... tail) { print(tail...); }",
			"template<class T> void print(vector<T>& vec) { for (const auto& a : vec) { cout << a << \" \"; } print(); }",
			"template<class T> void print(vector<vector<T>>& vec2d) { for (auto& vec : vec2d) { print(vec); } }",
			"void print(vector<string>& grid) { for (const auto& row : grid) print(row); }",
			"template<class T, class U> void print(const map<T, U>& mp) { for (const auto& [x, y] : mp) { print(x, y); } }",
			"template<class T> void print(set<T>& st) { for (const auto& a : st) { cout << a << \" \"; } print(); }",
			"template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }",
			"template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }",
			"inline bool chmax(ll& a, ll b) { if (a < b) { a = b; return 1; } return 0; }",
			"inline bool chmin(ll& a, ll b) { if (a > b) { a = b; return 1; } return 0; }",
			"auto max(ll a, ll b) { if (a > b) return a; else return b; }",
			"auto min(ll a, ll b) { if (a < b) return a; else return b; }",
			"// #include <atcoder/all>",
			"// using namespace atcoder;",
			"// using mint = modint998244353;",
			"// using mint = modint1000000007;",
			"",
			"",
			"int main() {",
			"  cin.tie(nullptr);",
			"  ios::sync_with_stdio(false);",
			"",
			"  $0",
			"  return 0;",
			"}"
		],
		"description": "template"
	},

	"simple template": {
		"prefix": "simple",
		"body": [
			"#include <bits/stdc++.h>",
			"#define rep(i, n) for (long long i = 0; i < (long long)(n); ++i)",
			"using namespace std;",
			"using ll = long long;",
			"",
			"",
			"int main() {",
			"  $0",
			"  return 0;",
			"}"
		],
		"description": ""
	},

	"rep macro": {
		"prefix": "rep",
		"body": [
			"#define rep(i, n) for (long long i = 0; i < (long long)(n); ++i)"
		],
		"description": "rep macro"
	},

	// 標準入出力
	"cout << n": {
		"prefix": "cout",
		"body": [
			"cout << $0 << \"\\n\";"
		],
		"description": "cout << "
	},

	"cout << Yes": {
		"prefix": "yes",
		"body": [
			"cout << \"Yes\" << '\\n';"
		],
		"description": "print yes"
	},

	"cout << No": {
		"prefix": "no",
		"body": [
			"cout << \"No\" << '\\n';"
		],
		"description": "print no"
	},

	"printf": {
		"prefix": "printf",
		"body": [
				"printf(\"%.10f\\n\", $0);",
		],
		"description": ""
	},

	// 構文省略
	"vs": {
		"prefix": "vs",
		"body": [
				"vector<string>",
		],
		"description": ""
	},

	"vector": {
		"prefix": "vec",
		"body": [
				"vector<$0>",
		],
		"description": ""
	},

	"vll": {
		"prefix": "vll",
		"body": [
				"vector<ll>",
		],
		"description": ""
	},

	"vvll": {
		"prefix": "vvll",
		"body": [
				"vector<vector<ll>> $1($2, vector<ll>($0));",
		],
		"description": ""
	},

	"vmint": {
		"prefix": "vmint",
		"body": [
			"vector<mint>"
		],
		"description": ""
	},

	"vvmint": {
		"prefix": "vvmint",
		"body": [
			"vector<vector<mint>> "
		],
		"description": ""
	},

	"vector pair": {
		"prefix": "vp",
		"body": [
			"vector<P>"
		],
		"description": "vector pair"
	},

	"mp": {
		"prefix": "mp",
		"body": [
				"map<ll, ll>",
		],
		"description": ""
	},

	"pq": {
		"prefix": "pq",
		"body": [
				"priority_queue<ll, vector<ll>, greater<ll>>",
		],
		"description": ""
	},

	"nextp": {
		"prefix": "np",
		"body": [
				"do {",
				"  $0",
				"} while (next_permutation(rng($1)));",
		],
		"description": ""
	},

	"emplace_back": {
		"prefix": "eb",
		"body": [
			"emplace_back($0);"
		],
		"description": "emplace_back"
	},

	"set": {
		"prefix": "st",
		"body": [
			"set<ll>"
		],
		"description": "set"
	},

	// 省略
	"inf": {
		"prefix": "inf",
		"body": [
				"constexpr ll inf = 9e18;",
		],
		"description": ""
	},

	"mod": {
		"prefix": "mod",
		"body": [
				"constexpr ll mod = 998244353;",
		],
		"description": ""
	},

	"pi": {
		"prefix": "pi",
		"body": [
				"constexpr double pi = acos(-1);",
		],
		"description": ""
	},

	"dxdy": {
		"prefix": "dxdy",
		"body": [
			"constexpr ll dx[] = {1, 0, -1, 0};",
			"constexpr ll dy[] = {0, 1,  0, -1};"
		],
		"description": "dxdy"
	},

	"dfs": {
		"prefix": "dfs",
		"body": [
			"auto dfs = [&](auto dfs, ) -> void {",
			"  ",
			"};"
		],
		"description": "dfs"
	},

	"edge": {
		"prefix": "edge",
		"body": [
			"vector<vector<ll>> edge(n);"
		],
		"description": "edge"
	},

	"binary_search": {
		"prefix": "bs",
		"body": [
			"ll ok = -1;",
			"ll ng = n;",
			"while (abs(ok-ng) > 1) {",
			"  ll mid = min(ok, ng) + abs(ok-ng)/2;",
			"",
			"  auto check = [&]() {",
			"  };",
			"",
			"  if (check()) ok = mid;",
			"  else ng = mid;",
			"}"
		],
		"description": "binary_search"
	},

	"round": {
		"prefix": "round",
		"body": [
			"auto round(ll a, ll b) { return (a + b - 1) / b; }"
		],
		"description": "round"
	},

	"lambda expression": {
		"prefix": "lambda",
		"body": [
			"auto f = [&]() {",
			"};"
		],
		"description": "lambda expression"
	},

	"pow": {
		"prefix": "pow",
		"body": [
			"auto Pow(ll x, ll n) { ll res = 1; while (n > 0) { if (n & 1) res *= x; x *= x; n >>= 1; } return res; }"
		],
		"description": "pow"
	},
}